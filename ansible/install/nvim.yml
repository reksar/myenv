- hosts: local

  vars:
    myconf: "{{ playbook_dir | dirname | dirname }}"

  tasks:

  - name: Settings
    block:

    - name: Settings common
      include_vars:
        file: "{{ myconf }}/ansible/settings.yml"
        name: settings

    - name: Settings nvim
      set_fact:
        nvim:
          repo: "https://github.com/neovim/neovim.git"
          src: "{{ settings.user.src }}/neovim"
          dest: "{{ settings.user.run }}/nvim"

  - name: Initial check
    block:

    - name: Check nvim already exists
      shell:
        cmd: which nvim
      register: which_nvim
      failed_when: false
      changed_when: false

    - set_fact:
        nvim_exists: "{{ which_nvim.stderr == 0 and which_nvim.stdout != '' }}"

    - debug:
        msg: |
          "Uninstall nvim before!"
          "Delete/update '{{ nvim.src }}' optionally."
      when: nvim_exists

    - name: Check nvim already built
      stat:
        path: "{{ nvim.src }}/build/bin/nvim"
      register: nvim_exe

  - name: Build nvim
    when:
      - not nvim_exists
      - not nvim_exe.stat.exists
    block:

    # See https://github.com/neovim/neovim/wiki/Building-Neovim#build-prerequisites
    - name: Install packages for building nvim
      include_tasks: packages.yml
      vars:
        packages:
          - ninja-build
          - gettext
          - libtool
          - libtool-bin
          - autoconf
          - automake
          - cmake
          - g++
          - pkg-config
          - unzip
          - curl
          - doxygen

    - name: Get neovim sources
      git:
        repo: "{{ nvim.repo }}"
        dest: "{{ nvim.src }}"
        version: stable
        # Clone if not exists, but do not update automatically
        update: no

    - name: Build nvim
      make:
        chdir: "{{ nvim.src }}"
        params:
          CMAKE_BUILD_TYPE: "Release"
          CMAKE_INSTALL_PREFIX: "{{ nvim.dest }}"
          USE_BUNDLED: "ON"

  - name: Install nvim
    when: not nvim_exists
    make:
      chdir: "{{ nvim.src }}"
      target: install
    become: true
